<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Steve Johnson’s Web Presence</title><link href="http://steveasleep.com/" rel="alternate"></link><link href="http://steveasleep.com/feeds/articles.atom.xml" rel="self"></link><id>http://steveasleep.com/</id><updated>2017-03-12T00:00:00-08:00</updated><entry><title>Home audio with OS X and cheap consumer electronics</title><link href="http://steveasleep.com/home-audio-with-os-x-and-cheap-consumer-electronics.html" rel="alternate"></link><published>2017-03-12T00:00:00-08:00</published><author><name>Steve Johnson</name></author><id>tag:steveasleep.com,2017-03-12:home-audio-with-os-x-and-cheap-consumer-electronics.html</id><summary type="html">&lt;p&gt;Since moving into our current house, Casey and I have been trying to make our living room audio setup seamless. We have a few constraints that make it impractical for us to just buy our way to a&amp;nbsp;solution.&lt;/p&gt;
&lt;h2 id="the-wish-list"&gt;The wish&amp;nbsp;list&lt;/h2&gt;
&lt;p&gt;Music is our primary focus. We have no need to switch video. &lt;span class="caps"&gt;RCA&lt;/span&gt; and 3.5mm cables are the norm, not &lt;span class="caps"&gt;HDMI&lt;/span&gt;. This doesn’t prevent us from getting a receiver that supports &lt;span class="caps"&gt;RCA&lt;/span&gt;, but those tend to be bulky and have lots of&amp;nbsp;buttons.&lt;/p&gt;
&lt;p&gt;We share a large &lt;span class="caps"&gt;MP3&lt;/span&gt; library that we would both like to control. It’s easy enough to take turns plugging our computers or phones into an aux cable, but it’s so much more seamless to collaboratively queue things up in the same player. There’s a mix of Windows and &lt;span class="caps"&gt;OS&lt;/span&gt; X machines in the house, so the solution has to be&amp;nbsp;multi-platform.&lt;/p&gt;
&lt;p&gt;We have a &lt;span class="caps"&gt;PC&lt;/span&gt; that functions as a &lt;span class="caps"&gt;TV&lt;/span&gt; and gaming machine. Latency is important for that use case, so wifi is&amp;nbsp;out.&lt;/p&gt;
&lt;p&gt;Speaking of gaming, it would be nice to be able to hear two audio sources at a time. I often disable game soundtracks and play my own&amp;nbsp;tunes.&lt;/p&gt;
&lt;p&gt;When people come stay with us, I want to be able to explain how it all works in less than 120&amp;nbsp;characters.&lt;/p&gt;
&lt;p&gt;And finally, I shouldn’t need to mess with it constantly. It should do everything we need without crashing or&amp;nbsp;fiddling.&lt;/p&gt;
&lt;p&gt;I’ve tried a bunch of low-cost configurations, and this is what we have today. It’s reliable, predictable, and hits all the points&amp;nbsp;above.&lt;/p&gt;
&lt;h2 id="mac-as-media-server"&gt;Mac as media&amp;nbsp;server&lt;/h2&gt;
&lt;p&gt;I have an old Mac laptop from 2011. Here’s how I set it up to act as a media server and audio passthrough device. Note that I already have an amplifier for the speakers. If you don’t, well, maybe you’re better off with a regular receiver! Anyway, on to&amp;nbsp;setup.&lt;/p&gt;
&lt;p&gt;Find an out-of-the-way location. Plug the laptop into the speakers and power. We’re about to set things up so you don’t need to be physically at the computer to manage it, so don’t worry about the location being convenient to&amp;nbsp;access.&lt;/p&gt;
&lt;h3 id="initial-setup-seated-at-media-server"&gt;Initial setup (seated at media&amp;nbsp;server)&lt;/h3&gt;
&lt;p&gt;Open System Preferences. Select Sharing. Check the “Remote Management” box, and when the drop-down opens, select “Observe” and&amp;nbsp;“Control.”&lt;/p&gt;
&lt;p&gt;&lt;img alt="Sharing preference pane" src="http://steveasleep.com/img/home_audio_adventures/prefpane_sharing.png" /&gt;&lt;/p&gt;
&lt;p&gt;Set or remember the “Computer Name” field at the top. A nice, short name you could use would be &lt;code&gt;media-server&lt;/code&gt;. Going forward, I’m going to assume you used that&amp;nbsp;name.&lt;/p&gt;
&lt;p&gt;Still in System Preferences, click the back button. Go to “Users &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Groups”. Click “Login Options.” Make sure the “Automatic login:” menu is set to the user you want. (You may also need to go to “Security &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Privacy” in System Preferences and uncheck “Disable automatic&amp;nbsp;login.”)&lt;/p&gt;
&lt;p&gt;Install &lt;a href="http://semaja2.net/projects/insomniaxinfo/"&gt;InsomniaX&lt;/a&gt; if you’re using a laptop. This will let you close the lid without putting the laptop to sleep. Once installed and running, open the menu, and make sure Preferences &amp;gt; “Start on Login” is&amp;nbsp;checked.&lt;/p&gt;
&lt;p&gt;Now close the lid and head to another Mac so you can configure things more&amp;nbsp;comfortably!&lt;/p&gt;
&lt;h3 id="remaining-setup-remote"&gt;Remaining setup&amp;nbsp;(remote)&lt;/h3&gt;
&lt;p&gt;On Mac number two, open a Finder window. In the Finder menu bar, select Go &amp;gt; Network or hit Command+Shift+K. Pick &lt;code&gt;media-server&lt;/code&gt; from the list and click the Share Screen button. Enter your username and password for your account on the media&amp;nbsp;server.&lt;/p&gt;
&lt;p&gt;You should see a list with &lt;code&gt;media-server&lt;/code&gt; init. Click it. There should be a “Share Screen…” button. Click it. Enter your username and password from &lt;code&gt;media-server&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Network folder in Finder" src="http://steveasleep.com/img/home_audio_adventures/finder_network.png" /&gt;
￼
(I call mine&amp;nbsp;“fiona.”)&lt;/p&gt;
&lt;p&gt;Before you really get going, you might want to take some time to open your wifi router’s settings and assign a dedicated internal &lt;span class="caps"&gt;IP&lt;/span&gt; to the media server. Macs will be able to connect to it as &lt;code&gt;media-server.local&lt;/code&gt;, but Windows machines won’t. I won’t provide specific instructions here due to the infinite variety of router software, but it was pretty simple on my Airport&amp;nbsp;Extreme.&lt;/p&gt;
&lt;p&gt;From here there are a ton of things you can do, so I’ll organize the rest of this post by&amp;nbsp;topic.&lt;/p&gt;
&lt;h2 id="spotify"&gt;Spotify&lt;/h2&gt;
&lt;p&gt;Spotify is easy to set up but limited to one user. Install Spotify on the media server, sign in to it, and ask it to launch itself on login. (Menu -&amp;gt; Spotify -&amp;gt; Preferences, Show Advanced Settings, Open Spotify automatically after you log in to the&amp;nbsp;computer.)&lt;/p&gt;
&lt;p&gt;Your devices can now control Spotify on the media server, but you have to be logged in as you. Even with family sharing, there’s no way to share a device among multiple user accounts without going for a super-technical solution like &lt;a href="https://github.com/dirkgroenen/mopidy-mopify"&gt;mopidy-mopify&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In our case, this means one of us has to use aux or Bluetooth to play Spotify through the&amp;nbsp;speakers. &lt;/p&gt;
&lt;h2 id="mp3s"&gt;MP3s&lt;/h2&gt;
&lt;p&gt;All of my solutions to the &lt;span class="caps"&gt;MP3&lt;/span&gt; library problem are, unfortunately, pretty technical. I don’t have any recommendations for people who are not comfortable with the&amp;nbsp;terminal.&lt;/p&gt;
&lt;p&gt;The best-documented ways to share an &lt;span class="caps"&gt;MP3&lt;/span&gt; library are &lt;a href="https://www.musicpd.org"&gt;mpd&lt;/a&gt; and &lt;a href="https://www.mopidy.com"&gt;mopidy&lt;/a&gt;. Both solutions mostly work but are broken in some annoying way and don’t have any truly great&amp;nbsp;clients.&lt;/p&gt;
&lt;p&gt;I prefer to use my own project, &lt;a href="https://github.com/irskep/summertunes"&gt;Summertunes&lt;/a&gt;. It glues together the &lt;a href="http://beets.io"&gt;beets&lt;/a&gt; extensible music library manager and &lt;a href="https://mpv.io"&gt;mpv&lt;/a&gt; player in an iTunes-like web interface. That means Casey and I can control the same library and playlist from any web browser on any device, including our phones. It’s responsive and&amp;nbsp;reliable.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Summertunes" src="http://steveasleep.com/img/home_audio_adventures/summertunes.png" /&gt;&lt;/p&gt;
&lt;p&gt;I use &lt;a href="http://www.soma-zone.com/LaunchControl/"&gt;LaunchControl&lt;/a&gt; with some shell scripts to run &lt;code&gt;mpd&lt;/code&gt; and Summertunes on login, so I never need to mess with them manually unless they&amp;nbsp;break.&lt;/p&gt;
&lt;p&gt;I recommend &lt;a href="https://github.com/CDrummond/cantata/releases"&gt;Cantata&lt;/a&gt; as an &lt;span class="caps"&gt;MPD&lt;/span&gt; client. It’s not very Mac-like, but it’s easy enough to find your way&amp;nbsp;around.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cantata" src="http://steveasleep.com/img/home_audio_adventures/cantata.png" /&gt;&lt;/p&gt;
&lt;p&gt;We only use &lt;span class="caps"&gt;MPD&lt;/span&gt; if I’m actively working on Summertunes and have temporarily hosed the installation. So about once per&amp;nbsp;month.&lt;/p&gt;
&lt;h2 id="input-passthrough"&gt;Input&amp;nbsp;passthrough&lt;/h2&gt;
&lt;p&gt;The Mac takes care of a lot by itself, but we still need to support a home theater &lt;span class="caps"&gt;PC&lt;/span&gt;, Bluetooth adapter, and 3.5mm aux cable. Some external hardware is&amp;nbsp;necessary.&lt;/p&gt;
&lt;p&gt;We could have the Mac output to a switch, but I’d rather just have everything merged into one signal so the music players work 100% of the time without having to remember what channel something is on. We can accomplish this using &lt;a href="https://rogueamoeba.com/soundsource/"&gt;SoundSource&lt;/a&gt;, a $10 utility that lets you mirror your Mac’s audio input to its&amp;nbsp;output.&lt;/p&gt;
&lt;p&gt;Buy SoundSource, run it, select “Open Play-Thru Window” in the menu, and click “Start Play-Thru.” You’ll need to hit this button after every reboot, unfortunately. If you use SoundSource for this purpose, please join me in sending feature request via their &lt;a href="https://rogueamoeba.com/support/knowledgebase/?showCategory=SoundSource"&gt;support form&lt;/a&gt; asking them to let us auto-enable&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="SoundSource" src="http://steveasleep.com/img/home_audio_adventures/soundsource.png" /&gt;&lt;/p&gt;
&lt;h2 id="audio-switching"&gt;Audio&amp;nbsp;switching&lt;/h2&gt;
&lt;p&gt;At this point, we’ve got a Mac hosting a music library and Spotify, which will pass through any input we send to it through its line-in port. We need to add Bluetooth, 3.5mm aux, and a home theater &lt;span class="caps"&gt;PC&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;I spent &lt;em&gt;hours&lt;/em&gt; on Amazon trying to find a device that does nothing but switch between 3 &lt;span class="caps"&gt;RCA&lt;/span&gt; or 3.5mm inputs, and has a remote control. The reason this is hard to find is that most people use a “stereo receiver,” which is both an amplifier and a switch. &lt;a href="https://www.amazon.com/Yamaha-R-S202BL-Stereo-Receiver/dp/B01EMQI2CU/"&gt;(Example, $150.)&lt;/a&gt; Stereo receiver remote controls never have fewer than 30 buttons. I don’t want anything in my house that has a D-pad and isn’t gaming&amp;nbsp;controller.&lt;/p&gt;
&lt;p&gt;I found exactly one device that fits my requirements: &lt;a href="https://www.amazon.com/gp/product/B01HGISAOQ/"&gt;“iKKEGOL 5 Ways 4 Port &lt;span class="caps"&gt;IN&lt;/span&gt; 1 Out Video Audio S-Video Game &lt;span class="caps"&gt;AV&lt;/span&gt; Switch Box Selector with Remote Control Av-666d Black”&lt;/a&gt;. It was twenty bucks and its remote has five buttons: four for input selection, one for&amp;nbsp;power.&lt;/p&gt;
&lt;p&gt;&lt;img alt="The switch" src="http://steveasleep.com/img/home_audio_adventures/switch.jpg" /&gt;&lt;/p&gt;
&lt;h2 id="bluetooth"&gt;Bluetooth&lt;/h2&gt;
&lt;p&gt;All Bluetooth devices for home use are garbage, but some are less garbage than others. I have had okay but not great luck with &lt;a href="https://www.amazon.com/gp/product/B016NUTG5K/"&gt;this adapter from Esinkin&lt;/a&gt; and was totally dissatisfied by &lt;a href="https://www.amazon.com/gp/product/B00SW0523A/"&gt;this one from iKross&lt;/a&gt;. I didn’t realize it at the time, but &lt;a href="http://thewirecutter.com/reviews/best-bluetooth-audio-receiver-for-your-home-stereo-or-speakers/"&gt;The Wirecutter has some suggestions that might be&amp;nbsp;better.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We use Bluetooth a lot less now that Summertunes is working and populated, so I care about this a lot less than I used&amp;nbsp;to.&lt;/p&gt;
&lt;h2 id="pieces-of-flair"&gt;Pieces of&amp;nbsp;flair&lt;/h2&gt;
&lt;p&gt;Every home across America with more than one audio source has a unique and probably awful system for getting audio from point A to point B. Ours is particularly unique! So I designed this handy reference card, and Casey printed it out on our brand new &lt;a href="https://cricut.com"&gt;Cricut&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="The switch" src="http://steveasleep.com/img/home_audio_adventures/reference_card.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Casey also gave the switcher remote the Cricut-assisted personal&amp;nbsp;touch:&lt;/p&gt;
&lt;p&gt;&lt;img alt="The switch" src="http://steveasleep.com/img/home_audio_adventures/remote.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;We’re still left with a minor cable nest, but the volume of the whole setup is only about two Macbook&amp;nbsp;Pros.&lt;/p&gt;
&lt;h2 id="parting-thoughts"&gt;Parting&amp;nbsp;thoughts&lt;/h2&gt;
&lt;p&gt;After writing all this out, the first question I had for myself was whether it was all worth it. Shouldn’t I have just bought a stereo&amp;nbsp;receiver?&lt;/p&gt;
&lt;p&gt;I’m still glad I didn’t, if only because of those damn remote controls. And the mixing of two sources is really&amp;nbsp;nice.&lt;/p&gt;
&lt;p&gt;The only downside is that the switch I ended up with is not very well built and introduces a tiny bit of hum. The remote has to be pointed straight at it for it to work, too. But on the other hand, it’s simpler than any other home audio system I’ve&amp;nbsp;used.&lt;/p&gt;</summary><category term="audio"></category></entry><entry><title>Blogging about iOS architecture at Hipmunk</title><link href="http://steveasleep.com/ios-at-hipmunk.html" rel="alternate"></link><published>2016-08-25T00:00:00-07:00</published><author><name>Steve Johnson</name></author><id>tag:steveasleep.com,2016-08-25:ios-at-hipmunk.html</id><summary type="html">&lt;p&gt;I wrote about the work I&amp;#8217;ve been doing at Hipmunk over the past year
over on over at the &lt;a href="https://hipmunk.github.io/posts/2016/Aug/19/taming-hipmunks-ios-code/"&gt;Hipmunk engineering blog&lt;/a&gt;.&lt;/p&gt;</summary><category term="ios"></category></entry><entry><title>Sometimes they call me Slam Jamsen</title><link href="http://steveasleep.com/slam-jamsen-salvage-operation-ep.html" rel="alternate"></link><published>2015-04-25T00:00:00-07:00</published><author><name>Steve Johnson</name></author><id>tag:steveasleep.com,2015-04-25:slam-jamsen-salvage-operation-ep.html</id><summary type="html">&lt;p&gt;&lt;a href="http://slamjamsen.com/"&gt;&lt;img alt="Salvage Operation EP album art" src="https://f4.bcbits.com/img/a2439303327_16.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Graffiti Labs is shutting down next month. I&amp;#8217;ll be spending June looking for
a new job &lt;em&gt;(edit: found one!)&lt;/em&gt; and honing my audio engineering&amp;nbsp;skills.&lt;/p&gt;
&lt;p&gt;As my first act of freedom, I&amp;#8217;m releasing &lt;strong&gt;&lt;a href="http://slamjamsen.com/"&gt;Slam Jamsen&amp;#8217;s Salvage Operation
&lt;span class="caps"&gt;EP&lt;/span&gt;!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is a collection of “bedroom tapes” made between 2005 and 2009. The popular vision of a budding high school rock musician is a guitarist sitting on a bed writing bad love songs, but in my case, I was at a desk with a low-end Mac and a &lt;span class="caps"&gt;MIDI&lt;/span&gt; keyboard, sharing the room with two more computers and a treadmill, writing bad video game&amp;nbsp;soundtracks.&lt;/p&gt;
&lt;p&gt;Since the rise of the 4-track, the cost of making decent home recordings has fallen at different rates for different genres. As a so-so piano student and early-to-mid-‘00s Mac user, my options were limited at first to &lt;span class="caps"&gt;MIDI&lt;/span&gt; editors. When Apple’s Garageband program came out, and I finally got a copy, I discovered the world of software&amp;nbsp;synthesizers.&lt;/p&gt;
&lt;p&gt;Video game development was my other major hobby at the time, so it seemed obvious that I should write my own soundtracks. (Otherwise, I wouldn’t have soundtracks at all, given my $0 budget.) My modus operandi was to constantly write songs for soundtracks for games that didn’t exist yet, and pull out the best ones from my catalogue when I actually made a&amp;nbsp;game.&lt;/p&gt;
&lt;p&gt;Four of the tracks on this &lt;span class="caps"&gt;EP&lt;/span&gt; come from that process. Duty Calls was made for Escort Wing, a game designed and mostly programmed by Will Hogben. Glue Me Together and The Creature Sneaks were made for gw0rp, my entry into uDevGames 2008. Catastrophe Prelude was never used for anything, but written for a nonexistent&amp;nbsp;game.&lt;/p&gt;
&lt;p&gt;In 2007, I built a Blue Man Group-style &lt;span class="caps"&gt;PVC&lt;/span&gt; instrument for a science competition. Once built, it was too tempting to pass up making music with it, so I wrote Parakeet in the E.R., Unsolved, and a few more songs that don’t appear on this &lt;span class="caps"&gt;EP&lt;/span&gt;. Those tracks also feature my classmates Amanda Andrews with bizarro-world guitar parts, and Eric Baize with an ocarina. My brother Phil played the bluesy intro to Unsolved. “Wheeee!” was made in the same batch, but doesn’t feature the &lt;span class="caps"&gt;PVC&lt;/span&gt;&amp;nbsp;instrument.&lt;/p&gt;
&lt;p&gt;That just leaves The Five Dollar Song, which I’ll just say was mostly written and played by Phil, with contributions from me, around&amp;nbsp;2005.&lt;/p&gt;
&lt;p&gt;Good free synthesizers that appear on this &lt;span class="caps"&gt;EP&lt;/span&gt; and are still around include daHornet, Automat, and&amp;nbsp;Remedy.&lt;/p&gt;</summary><category term="music"></category></entry><entry><title>I played drums on this EP</title><link href="http://steveasleep.com/the-nest-ep.html" rel="alternate"></link><published>2015-04-20T00:00:00-07:00</published><author><name>Steve Johnson</name></author><id>tag:steveasleep.com,2015-04-20:the-nest-ep.html</id><summary type="html">&lt;p&gt;&lt;a href="http://jams.thenestmusic.com/releases"&gt;&lt;img alt="The Nest EP album art" src="http://f4.bcbits.com/img/a2623181876_16.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My band The Nest just put out its first &lt;span class="caps"&gt;EP&lt;/span&gt;.
&lt;a href="http://jams.thenestmusic.com/releases"&gt;Listen to it&amp;nbsp;here!&lt;/a&gt;&lt;/p&gt;</summary><category term="music"></category></entry><entry><title>I played bass on this album</title><link href="http://steveasleep.com/anthony-presti-album.html" rel="alternate"></link><published>2014-04-29T00:00:00-07:00</published><author><name>Steve Johnson</name></author><id>tag:steveasleep.com,2014-04-29:anthony-presti-album.html</id><summary type="html">&lt;p&gt;&lt;a href="https://anthonyprestimusic.bandcamp.com/album/clarity-in-hindsight"&gt;&lt;img alt="Clarity in Hindsight album art" src="https://f4.bcbits.com/img/a4160820184_16.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I just returned from recording an album with &lt;span class="caps"&gt;SF&lt;/span&gt; local artist Anthony Presti.
&lt;a href="https://anthonyprestimusic.bandcamp.com/album/clarity-in-hindsight"&gt;Check it out on&amp;nbsp;Bandcamp!&lt;/a&gt;&lt;/p&gt;</summary><category term="music"></category></entry><entry><title>The New Dork Times</title><link href="http://steveasleep.com/the-new-dork-times.html" rel="alternate"></link><published>2013-08-02T00:00:00-07:00</published><author><name>Steve Johnson</name></author><id>tag:steveasleep.com,2013-08-02:the-new-dork-times.html</id><summary type="html">&lt;p&gt;I did the best writing of my life in 1997 when I was eight years old, sitting
at an old &lt;span class="caps"&gt;PC&lt;/span&gt; with my friend Eric Drury to write the New Dork Times. Although it
ran for only nine issues published between 1997 and 1999, its biting social
commentary remains as relevant as&amp;nbsp;ever.&lt;/p&gt;
&lt;p&gt;Earlier this year I came across my personal archives of all nine issues of the
New Dork Times and decided they were worth two hours of attention to bring to a
modern digital audience. I now present to you an online time capsule from 16
years ago, lovingly typeset in its original Times New&amp;nbsp;Roman:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://steveasleep.com/newdorktimes/"&gt;The New Dork Times – Digital&amp;nbsp;Edition&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</summary><category term="projects"></category></entry><entry><title>How I Made a Realtime Multiplayer Art Piece in 48 Hours, and How It Turned Out</title><link href="http://steveasleep.com/we-dreamers-postmortem.html" rel="alternate"></link><published>2013-05-04T00:00:00-07:00</published><author><name>Steve Johnson</name></author><id>tag:steveasleep.com,2013-05-04:we-dreamers-postmortem.html</id><summary type="html">&lt;iframe width="560" height="315" src="//www.youtube.com/embed/2bmRw-QD1Bs" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;We Dreamers is an abstract online sandbox that placed sixth in the Innovation
category of Ludum Dare 26.
&lt;a href="http://steveasleep.com/we_dreamers_2"&gt;You can play it here.&lt;/a&gt; It may take a
while for the 4+ &lt;span class="caps"&gt;MB&lt;/span&gt; of user data to download, so give it a minute or&amp;nbsp;two.&lt;/p&gt;
&lt;p&gt;Of all my programming escapades over the past couple of years, I&amp;#8217;m most proud
of this one. Here&amp;#8217;s a comprehensive collection of my thoughts about it,
including a discussions of the technical&amp;nbsp;aspects.&lt;/p&gt;
&lt;h2 id="conception"&gt;Conception&lt;/h2&gt;
&lt;p&gt;During the final voting round for Ludum Dare 26, I spent a couple of hours
coming up with good ideas for every possible theme…except minimalism. No way
that would get through,&amp;nbsp;right?&lt;/p&gt;
&lt;p&gt;When that theme was chosen, and I had to throw out all of my wonderful schemes,
most of which were single player pseudo-roguelikes. Instead, I picked a vague
idea: a web-based multiplayer world where you dig out rooms underground in a
grid. Maybe there would be shapes and colors and stuff. Genius! I figured out
the rest as I went&amp;nbsp;along.&lt;/p&gt;
&lt;p&gt;You can do a few&amp;nbsp;things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Move with the arrow keys or &lt;span class="caps"&gt;WASD&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Harvest color with&amp;nbsp;space.&lt;/li&gt;
&lt;li&gt;Dig out new rooms by bumping into walls. You need color to do this. The new 
   room will be the color of your dot, which is affected by the color in your&amp;nbsp;bucket.&lt;/li&gt;
&lt;li&gt;Dump color with r, g, and b (or 1, 2, and 3) to change the color of your&amp;nbsp;dot.&lt;/li&gt;
&lt;li&gt;Leave notes on rooms (if you are level 2) that appear at the bottom of the 
   screen when you enter the&amp;nbsp;room.&lt;/li&gt;
&lt;li&gt;Put down big block letters (if you are level 3) that you can use to spell 
   [sometimes naughty]&amp;nbsp;words.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You gain levels by adding content. If anyone else is online at the same time as
you, you can see their dot and any content they add, all&amp;nbsp;live-updated.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot" src="http://www.ludumdare.com/compo/wp-content/uploads/2013/05/2m-300x207.png" /&gt;&lt;/p&gt;
&lt;h2 id="competition-results"&gt;Competition&amp;nbsp;results&lt;/h2&gt;
&lt;p&gt;It placed 6th in the Innovation category out of 2,346 games. The rest of the
category scores aren&amp;#8217;t as impressive as raw numbers but are still nice in terms
of the number of&amp;nbsp;games:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Category&lt;/th&gt;
&lt;th&gt;Ranking&lt;/th&gt;
&lt;th&gt;Score&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Innovation&lt;/td&gt;
&lt;td&gt;#6&lt;/td&gt;
&lt;td&gt;4.38&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mood&lt;/td&gt;
&lt;td&gt;#210&lt;/td&gt;
&lt;td&gt;3.36&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Overall&lt;/td&gt;
&lt;td&gt;#238&lt;/td&gt;
&lt;td&gt;3.51&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Audio&lt;/td&gt;
&lt;td&gt;#464&lt;/td&gt;
&lt;td&gt;2.85&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Theme&lt;/td&gt;
&lt;td&gt;#492&lt;/td&gt;
&lt;td&gt;3.60&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Humor&lt;/td&gt;
&lt;td&gt;#549&lt;/td&gt;
&lt;td&gt;2.23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Graphics&lt;/td&gt;
&lt;td&gt;#650&lt;/td&gt;
&lt;td&gt;2.92&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Fun&lt;/td&gt;
&lt;td&gt;#769&lt;/td&gt;
&lt;td&gt;2.75&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;People tend to have one of two viewpoints. They’re either like
&lt;a href="http://www.ludumdare.com/compo/ludum-dare-26/?action=preview&amp;amp;uid=22915"&gt;wrongcoder&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Neat. Quite unique. Technologically a marvel for the available time. To be
honest, though, I don’t get the purpose of&amp;nbsp;it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;or they’re like &lt;a href="http://www.ludumdare.com/compo/ludum-dare-26/?action=preview&amp;amp;uid=8308"&gt;BlennosoftGames&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is something very cheerful about this game. As far as I can tell you
don’t “win” you just smile&amp;nbsp;:)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Most players were in the second category, so I’m very happy with how it turned
out. People seem to understand what I’m trying to do: create a virtual canvas
where contribution is easy, bad behavior is difficult, and quirky things can be
found given a few minutes’ exploration.
&lt;a href="http://www.ludumdare.com/compo/ludum-dare-26/?action=preview&amp;amp;uid=11022"&gt;Hegemege&lt;/a&gt;
said it “felt a bit like geocaching,” which really tickles&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;The numbers are encouraging as well. When I checked earlier today, there were
&lt;strong&gt;3,019 rooms dug by 147 users.&lt;/strong&gt; 54% of players dug 5 or more rooms, with some
people digging over 100 rooms. 11% had a note on them. 18% had a stamp. So
people were definitely doing more than running around and bumping into&amp;nbsp;walls.&lt;/p&gt;
&lt;p&gt;At first I was surprised that more rooms had stamps than notes, since you have
to be level 2 to write a note, and level 3 to place a stamp. But it was pointed
out to me that a stamp is just one letter, and you have to think a lot less to
put one down. Want to spell &lt;span class="caps"&gt;DOG&lt;/span&gt; &lt;span class="caps"&gt;FART&lt;/span&gt; in huge letters? It’s only seven easy&amp;nbsp;pieces!&lt;/p&gt;
&lt;p&gt;I got a friendly nod from a post on &lt;a href="http://indiestatik.com/2013/04/29/ludum-dare-26/"&gt;Indie Statik&amp;#8217;s Ludum Dare
highlights&lt;/a&gt;. They compared We
Dreamers to Peter Molyneux’s game Curiosity. I&amp;#8217;m not sure if that&amp;#8217;s a
compliment, but it’s still nice to be noticed. They have a &lt;a href="http://indiestatik.com/2013/05/02/ludum-dare-25-part-2/"&gt;second highlights
post&lt;/a&gt; as&amp;nbsp;well.&lt;/p&gt;
&lt;h2 id="technical-details"&gt;Technical&amp;nbsp;details&lt;/h2&gt;
&lt;p&gt;You might be wondering, like
&lt;a href="http://www.ludumdare.com/compo/ludum-dare-26/?action=preview&amp;amp;uid=20822"&gt;StuStutheBloo&lt;/a&gt;
in We Dreamers’s comments, &lt;strong&gt;“How did you even put this together in the time&amp;nbsp;available?”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The short answer is that I used &lt;a href="https://www.firebase.com/"&gt;Firebase&lt;/a&gt;, “a cloud
database designed to power real-time, collaborative applications.” Put another
way, it’s a magic, event-driven Javascript object that updates instantly across
all clients. I didn’t have to write a server, or even deal with much
multiplayer logic at all; I just designed all interactive objects to listen to
Firebase events. The only thing special about the dot you control, as opposed
to those controlled by others and displayed on your screen, is that your client
is updating a Firebase subtree for your data. Those updates are reflected
instantly for you, and very quickly for everyone&amp;nbsp;else.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you want to try your hand at a multiplayer online game for Ludum Dare, I
strongly recommend that you try Firebase.&lt;/strong&gt; There are half a dozen two-player
games I haven’t been able to rate because I’d need to have another person
sitting next to me to play with. You don’t even need to get all crazy and
realtime – it’s also perfect for turn-based games. I hope to try something
head-to-head next&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;Now for a longer answer to StuStutheBoo’s question. Although Firebase was
essential to having the technical capability to build this kind of online
experience, it was even more important that I knew my tools extremely well. My
day job is to work on &lt;a href="http://playbuildy.com/"&gt;Buildy&lt;/a&gt;, an online multiplayer
realtime building sandbox where you can make just about anything. For &lt;span class="caps"&gt;LD26&lt;/span&gt;, I
brought out the same tools we use to make Buildy: &lt;span class="caps"&gt;HTML5&lt;/span&gt;, &lt;span class="caps"&gt;CSS&lt;/span&gt;,
&lt;a href="http://coffeescript.org/"&gt;Coffeescript&lt;/a&gt;, &lt;a href="http://gruntjs.com/"&gt;Grunt&lt;/a&gt;,
&lt;a href="https://github.com/raimohanska/bacon.js"&gt;Bacon.js&lt;/a&gt;,
&lt;a href="http://www.schillmania.com/projects/soundmanager2/"&gt;SoundManager2&lt;/a&gt;,
&lt;a href="http://jquery.com/"&gt;jQuery&lt;/a&gt;, &lt;a href="http://craig.is/killing/mice"&gt;Mousetrap&lt;/a&gt;, and
&lt;a href="http://underscorejs.org/"&gt;underscore.js&lt;/a&gt;. The whole game is a bunch of static
files hosted on Github Pages, just like the rest of steveasleep.com.  To
deploy, all I had to do was push to the &lt;code&gt;gh-pages&lt;/code&gt; branch.&lt;/p&gt;
&lt;p&gt;I didn’t do anything I hadn’t done before. All of the rendering is just styled
&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements. I’m familiar with each of those Javascript libraries. I’m
comfortable with the Chrome dev tools. Static files are incredibly easy to
deploy and serve without paying a dime. As a result of using all these familiar
pieces, I spent almost no time debugging simple (or even complicated)&amp;nbsp;issues.&lt;/p&gt;
&lt;p&gt;If you’re looking for advice about how to do Ludum Dare well, here’s mine:
&lt;strong&gt;learn your tools.&lt;/strong&gt; Make sure you know how to write, run, and deploy your
game.  Don’t give yourself any surprises. (Python developers have a
particularly tough time with this one. There are still a few that ask you to
install PyGame to play and rate their game. I sympathize, having used py2app
for &lt;span class="caps"&gt;LD19&lt;/span&gt;.)&lt;/p&gt;
&lt;p&gt;If you spend any time in Javascript, try to get your head around
&lt;a href="https://github.com/raimohanska/bacon.js"&gt;Bacon.js&lt;/a&gt;. It can decrease game logic
complexity by quite a lot if you’re willing to invest your brain resources in
it. We Dreamers would have had 30% more code and been 30% buggier without&amp;nbsp;it.&lt;/p&gt;
&lt;h2 id="downsides-and-difficulties"&gt;Downsides and&amp;nbsp;difficulties&lt;/h2&gt;
&lt;p&gt;There’s another, secret reason why I was able to write We Dreamers so fast: I
didn’t give more than a passing thought about scale. I had no idea how much
data users would generate (currently ~4 &lt;span class="caps"&gt;MB&lt;/span&gt;) or how well browsers would deal
with 6000+ &lt;span class="caps"&gt;DOM&lt;/span&gt; elements moving around (not very well). Buildy partitions its
worlds into squares, so it’s easy to only load a piece at a time. We Dreamers
has no such wisdom, so every user loads the entire world when the page loads.
Threeish megabytes isn’t so bad for a game, but &lt;span class="caps"&gt;DOM&lt;/span&gt; performance turned out to
be a huge issue once things got big. To help players deal with the speed, I now
provide a stripped down version that web browsers can handle&amp;nbsp;better.&lt;/p&gt;
&lt;p&gt;I chose to do all the rendering via styled &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s because I wanted to spend
as little time as possible on drawing code. I gambled that web browsers would
be smart enough to efficiently clip offscreen nodes. It almost worked, but I
really should have used &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;. It wouldn&amp;#8217;t have been much more&amp;nbsp;work.&lt;/p&gt;
&lt;p&gt;I had a tiny bit of trouble with cross-browser compatibility.
&lt;code&gt;requestAnimationFrame&lt;/code&gt; still hasn’t been un-prefixed in Firefox or Safari.
Safari didn’t like any of the &lt;span class="caps"&gt;CSS&lt;/span&gt; gradient variants I tried either, so the
doors are all white when viewed in that browser. In the end, though, I was able
to make it widely compatible and consistent. (This is another issue that would
have been avoided had I used &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;Despite using Firebase, here was one aspect of distributed computing I did have
to deal with: syncing the time across all clients to get the color harvesting
to look right. I thought I was being clever by using a public web service that
gives you the current time in &lt;span class="caps"&gt;JSON&lt;/span&gt;. Unfortunately it’s hosted on Google App
Engine and blew through its quota soon after voting started, so now all the
players’ clocks are wrong anyway. It doesn’t affect the game much, but I should
have seen it&amp;nbsp;coming.&lt;/p&gt;
&lt;p&gt;There was one last issue that I was always aware of but never had time to deal
with: access controls. There are no &lt;span class="caps"&gt;API&lt;/span&gt;-level restrictions on who can edit what
data. At least one person exploited it to leave me an amusing note, but
fortunately there were no abusers. Firebase has the ability to use access
controls, but I didn&amp;#8217;t have time to learn their &lt;span class="caps"&gt;API&lt;/span&gt;. Another reason to know
my tools really well, I&amp;nbsp;suppose.&lt;/p&gt;
&lt;h2 id="in-closing"&gt;In&amp;nbsp;closing,&lt;/h2&gt;
&lt;p&gt;I had a fun and intense time this year. Of my three attempts to date, We
Dreamers is far and away my best Ludum Dare effort yet. I plan to come back for
another round in August for &lt;span class="caps"&gt;LD27&lt;/span&gt;.&lt;/p&gt;</summary><category term="games"></category></entry><entry><title>Rendering Buildy’s satellite view: PhantomJS, Beanstalkd, Leaflet, and PIL</title><link href="http://steveasleep.com/rendering-buildys-satellite-view.html" rel="alternate"></link><published>2012-11-21T00:00:00-08:00</published><author><name>Steve Johnson</name></author><id>tag:steveasleep.com,2012-11-21:rendering-buildys-satellite-view.html</id><summary type="html">&lt;p&gt;&lt;img alt="Screenshot of Buildy" src="http://steveasleep.com/img/buildy.png" /&gt;&lt;/p&gt;
&lt;p&gt;A world in Buildy can be hundreds of square miles. I &lt;a href="http://blog.playbuildy.com/2012/11/21/rendering-buildys-satellite-view-phantomjs-beanstalkd-leaflet-and-pil/"&gt;wrote about the
combination of technologies we use to render and display enormous zoomed out
world views on the Buildy Blog&lt;/a&gt;.&lt;/p&gt;</summary><category term="programming"></category></entry><entry><title>One thousand users put 250,000 objects in Buildy in 18 hours</title><link href="http://steveasleep.com/1k-hacker-news-readers-on-buildy.html" rel="alternate"></link><published>2012-11-14T00:00:00-08:00</published><author><name>Steve Johnson</name></author><id>tag:steveasleep.com,2012-11-14:1k-hacker-news-readers-on-buildy.html</id><summary type="html">&lt;p&gt;&lt;img alt="Screenshot of Buildy" src="http://steveasleep.com/img/buildy2.png" /&gt;&lt;/p&gt;
&lt;p&gt;We posted Buildy on Hacker News and it was on the front page for 17 hours. I
shared &lt;a href="http://blog.playbuildy.com/2012/11/14/hn-postmortem/"&gt;some observations and experiences on the Buildy Blog&lt;/a&gt;.&lt;/p&gt;</summary><category term="programming"></category></entry><entry><title>Space Train Postmortem</title><link href="http://steveasleep.com/space-train-postmortem.html" rel="alternate"></link><published>2010-12-13T00:00:00-08:00</published><author><name>Steve Johnson</name></author><id>tag:steveasleep.com,2010-12-13:space-train-postmortem.html</id><summary type="html">&lt;p&gt;&lt;img alt="Space Train logo" src="http://steveasleep.com/img/content/space_train_logo.png" /&gt;&lt;/p&gt;
&lt;p&gt;With the end of a semester just past, my course projects are all bubbling up in
various states of completion. One of these is a point-and-click adventure game
called &lt;em&gt;&lt;a href="http://steveasleep.com/space-train.html"&gt;Space Train: Terror on the Mustachio
Express&lt;/a&gt;&lt;/em&gt;, developed by a team of
students from the &lt;a href="http:/www.cia.edu/"&gt;Cleveland Institute of Art&lt;/a&gt; and &lt;a href="http:/www.case.edu"&gt;Case
Western Reserve University&lt;/a&gt;. Its technical components
include an event-driven level scripting system, characters, items, inventory,
dialogue, and more.  The engine is written in Python using my game programming
weapon of choice, the &lt;a href="http:/www.pyglet.org"&gt;pyglet&lt;/a&gt; library. The&amp;nbsp;plot:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Inga Borga is a poetry-loving senior citizen. One of her favorite authors,
Stanislov Slavinsky, is reading his poetry live on the nearby Planet Deux, a
short hop by space train from Inga&amp;#8217;s home. She wants nothing more than to see
Stanislav in person, so she catches the Mustachio Express to Planet Deux.
Little does she know it will be a bumpy&amp;nbsp;ride&amp;#8230;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sounds grand, right? We thought so too, but in typical student fashion we
failed to account for one thing: &lt;strong&gt;adventure games take a lot of work to
make.&lt;/strong&gt; As a result, the game is only about twenty minutes long. Even so, we
all learned from the&amp;nbsp;experience.&lt;/p&gt;
&lt;h2 id="the-course"&gt;The&amp;nbsp;Course&lt;/h2&gt;
&lt;p&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;&lt;span class="caps"&gt;EECS&lt;/span&gt; 390 - Advanced Game Development Project&amp;#8221; is a joint course between the
Cleveland Institute of Art and Case Western Reserve University. Teams of 6-12
artists and programmers collaborate to produce some sort of game. At the end of
the course, the teams present to their peers and to Electronic Arts staff for
questions and critique. The course is currently taught by Dr. Marc Buchner
(&lt;span class="caps"&gt;CWRU&lt;/span&gt;) and &lt;a href="http://www.knuthybinette.com/"&gt;Knut Hybinette&lt;/a&gt; (&lt;span class="caps"&gt;CIA&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;The other two games made this semester were Kalotai, a location-aware monster
collection/battle game for Android, and Louder Than Words, a platformer with
branching story lines based on a morality&amp;nbsp;system.&lt;/p&gt;
&lt;h2 id="how-it-went-down"&gt;How It Went&amp;nbsp;Down&lt;/h2&gt;
&lt;p&gt;We all arrived at 8:30 &lt;span class="caps"&gt;AM&lt;/span&gt; on the first day of class, heavily caffeinated.
Everyone put ideas on a white board and then divided into three teams based on
interest. My team ended up with four programmers and six artists, with me as
team leader. We immediately decided on some basics and began working on a
schedule. By 9:45, we had drawn a crazy whiteboard&amp;nbsp;diagram.&lt;/p&gt;
&lt;p&gt;It was already clear that we would make the best game ever. The drawing was so
good we didn&amp;#8217;t even need a design document. We wrote one anyway because it was
a course requirement. We spent the next month and a half developing the
environments and the characters, fleshing out plot points, and writing the game&amp;nbsp;engine.&lt;/p&gt;
&lt;p&gt;The class was only scheduled to meet for an hour every week, which was far from
enough time to get anything done. Most of our communication was done on Fridays
in a classroom when we met to give status updates, brainstorm new directions,
and work on the schedule. During the week, we communicated via a mailing list,
shared files using a &lt;a href="http:/www.dropbox.com"&gt;Dropbox&lt;/a&gt; shared folder, and
pushed code back and forth with &lt;a href="http:/www.git-scm.org/"&gt;git&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At the halfway point, we presented our work to the class. Our demo revealed
some significant issues, none of which were technical: the character art lacked
a consistent style, the story was not cohesive, and there were no clear puzzle
designs. The characters we did have were shallow and stereotyped. This was not
a good situation to be in for a story-based and art-heavy&amp;nbsp;game!&lt;/p&gt;
&lt;p&gt;We immediately changed our art and story development processes. Rather than
have three or four artists take characters all the way from concept to final
execution, we split all character work into line work, coloring, and shading,
and assigned one artist to each stage of the pipeline. Rather than working from
a vague, error-prone shared idea of a partially-recorded story, I spent a few
hours writing detailed scripts for each level we planned to implement. We
followed this process to the end, and it worked beautifully. We had a very
slick&amp;nbsp;demo.&lt;/p&gt;
&lt;p&gt;Here are some screenshots of the&amp;nbsp;game:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://steveasleep.com/img/content/space_train_screenshot_1.png"&gt;&lt;img alt="Screenshot 1" src="http://steveasleep.com/img/content/space_train_thumb_1.png" /&gt;&lt;/a&gt;
&lt;a href="http://steveasleep.com/img/content/space_train_screenshot_2.png"&gt;&lt;img alt="Screenshot 2" src="http://steveasleep.com/img/content/space_train_thumb_2.png" /&gt;&lt;/a&gt;
&lt;a href="http://steveasleep.com/img/content/space_train_screenshot_3.png"&gt;&lt;img alt="Screenshot 3" src="http://steveasleep.com/img/content/space_train_thumb_3.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here are some of the stages of the game&amp;#8217;s artistic&amp;nbsp;development:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://steveasleep.com/img/content/space_train_art_1.png"&gt;&lt;img alt="Concept Art" src="http://steveasleep.com/img/content/space_train_art_1_thumb.png" /&gt;&lt;/a&gt;
&lt;a href="http://steveasleep.com/img/content/space_train_art_2.png"&gt;&lt;img alt="Line Art" src="http://steveasleep.com/img/content/space_train_art_2_thumb.png" /&gt;&lt;/a&gt;
&lt;a href="http://steveasleep.com/img/content/space_train_art_3.png"&gt;&lt;img alt="Flat Color" src="http://steveasleep.com/img/content/space_train_art_3_thumb.png" /&gt;&lt;/a&gt;
&lt;a href="http://steveasleep.com/img/content/space_train_art_4.png"&gt;&lt;img alt="Object/Furniture Design" src="http://steveasleep.com/img/content/space_train_art_4_thumb.png" /&gt;&lt;/a&gt;
&lt;a href="http://steveasleep.com/img/content/space_train_art_5.png"&gt;&lt;img alt="Rendered Art" src="http://steveasleep.com/img/content/space_train_art_5_thumb.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="lessons-learned"&gt;Lessons&amp;nbsp;Learned&lt;/h2&gt;
&lt;p&gt;I had never been in a months-long team leadership position before. My
experience organizing &lt;a href="http:/hacsoc.org/"&gt;&lt;span class="caps"&gt;CWRU&lt;/span&gt; Hacker Society&lt;/a&gt; helped, but
that was more cat herding than game building. By the end of the course the
team had worked out a process by trial and error that seemed to produce
results, but by the time we found that process, it was really too late to save
the&amp;nbsp;game.&lt;/p&gt;
&lt;h3 id="schedule"&gt;Schedule&lt;/h3&gt;
&lt;p&gt;We spent too much time thinking up random characters and not enough time
fitting them into a big picture. We should have started writing
pseudo-screenplays or storyboards to work from by the third week. That would
have made it easier for us to give the artists specific tasks, a problem we had
early&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;Storyboards would have given us the opportunity to implement parts of the
levels, which would have helped us develop a scripting &lt;span class="caps"&gt;API&lt;/span&gt;. For most of the
semester, we worked with an ad-hoc &lt;span class="caps"&gt;API&lt;/span&gt;. We ended up redesigning it in the last
week because it wasn&amp;#8217;t working for us&amp;nbsp;anymore.&lt;/p&gt;
&lt;h3 id="adventure-games-are-hard-to-make"&gt;Adventure Games Are Hard to&amp;nbsp;Make&lt;/h3&gt;
&lt;p&gt;Almost every game I have ever made has involved bullets. That usually means
those bullets are heading for a relatively small number of enemy types, are
flying over relatively simple pre-rendered or procedurally generated terrain,
and have very simple animations. In an adventure game, everything the player
sees has a unique design and multiple animations. The average screen time of a
given image is minutes or less. Even though we were working with six artists,
we were barely able to finish our 20 minutes of play&amp;nbsp;time.&lt;/p&gt;
&lt;h3 id="communication-is-key"&gt;Communication is&amp;nbsp;Key&lt;/h3&gt;
&lt;p&gt;We encouraged communication by providing as many useful collaboration tools as
possible. Without constant communication, Space Train would have been a total&amp;nbsp;failure.&lt;/p&gt;
&lt;p&gt;By keeping all live game assets in a shared Dropbox folder, we guaranteed
instant availability of the artists&amp;#8217; work without using a cumbersome email
system or an artist-unfriendly version control system. Our consistent meeting
format was usually effective at giving everyone concrete goals for the week.
Git, of course, is the ideal code collaboration tool. The mailing list filled
in any&amp;nbsp;gaps.&lt;/p&gt;
&lt;h3 id="course-project-group-dynamics-are-weird"&gt;Course Project Group Dynamics are&amp;nbsp;Weird&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;ve always felt uncomfortable with the way course project groups are formed.
Usually they form around ideas, not around teams, and that was explicitly the
case with this course. This means that team dynamics are a total crapshoot, and
if things go south, you&amp;#8217;re locked in for three months and your success is
irrevocably chained together. By the end of the course, we effectively had two
programmers and four artists, with four other people functioning as dead&amp;nbsp;weight.&lt;/p&gt;
&lt;h3 id="conspicuously-absent-from-this-list"&gt;Conspicuously Absent From This&amp;nbsp;List:&lt;/h3&gt;
&lt;p&gt;Significant code issues. We really powered through the engine and never got
hindered by any major design flaws. The game&amp;#8217;s source code is &lt;a href="http:/www.github.com/irskep/Space-Train"&gt;on
Github&lt;/a&gt;. It&amp;#8217;s not beautiful, but it
worked well enough for&amp;nbsp;us.&lt;/p&gt;
&lt;h2 id="the-team"&gt;The&amp;nbsp;Team&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Steve Johnson&lt;/strong&gt;: Lead programmer, screenplay, music, engine, &lt;span class="caps"&gt;UI&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http:/taxidermyrobot.blogspot.com/"&gt;Kelsey Bass&lt;/a&gt;&lt;/strong&gt;: Lead artist, character design/line&amp;nbsp;work/animation&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http:/www.fredhatfull.com/"&gt;Fred Hatfull&lt;/a&gt;&lt;/strong&gt;: Level scripting, engine, &lt;span class="caps"&gt;UI&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://www.ekeegan.com/"&gt;Liz Keegan&lt;/a&gt;&lt;/strong&gt;: Environments,&amp;nbsp;objects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tyler Goeringer&lt;/strong&gt;: Level scripting,&amp;nbsp;engine&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Susie Kim&lt;/strong&gt;:&amp;nbsp;Objects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Drew Carrow&lt;/strong&gt;: Character design,&amp;nbsp;environment/objects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sean Murphy&lt;/strong&gt;: Sound, pause&amp;nbsp;screen&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dylan Carrow&lt;/strong&gt;: Coloring,&amp;nbsp;objects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vincent Pizarski&lt;/strong&gt;: Character design, coloring,&amp;nbsp;exteriors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kelsey did caricatures of the team for the credit sequence. Here&amp;#8217;s mine&amp;nbsp;for:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Caricature" src="http://steveasleep.com/img/content/space_train_caricature.png" /&gt;&lt;/p&gt;</summary><category term="games"></category></entry></feed>